version: "3.9"
services:
  db:
    image: postgres:latest
    volumes:
      - app-db-data:/var/lib/postgresql/data/
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "5432:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 5s
      timeout: 5s
      retries: 5

  frontend:
    build:
      context: ./frontend
    ports:
      - "80:80"
    environment:
      REACT_APP_API_URL: ${FRONTEND_API_URL}

  backend:
    build:
      context: ./backend
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - ./backend:/app
    ports:
      - 8080:${BACKEND_PORT}
    environment:
      DEBUG: ${DEBUG}

      BACKEND_TTILE: ${BACKEND_TTILE}
      BACKEND_DESCRIPTION: ${BACKEND_DESCRIPTION}
      BACKEND_PREFIX: ${BACKEND_PREFIX}

      BACKEND_HOST: ${BACKEND_HOST}
      BACKEND_PORT: ${BACKEND_PORT}
      BACKEND_RELOAD: ${BACKEND_RELOAD}

      BACKEND_JWT_SECRET: ${BACKEND_JWT_SECRET}
      BACKEND_JWT_ALGORITHM: ${BACKEND_JWT_ALGORITHM}
      BACKEND_JWT_ACCESS_TOKEN_EXPIRE_MINUTES: ${BACKEND_JWT_ACCESS_TOKEN_EXPIRE_MINUTES}

      BACKEND_DISABLE_AUTH: ${BACKEND_DISABLE_AUTH}

      POSTGRES_SERVER: ${POSTGRES_SERVER}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}

      ENV: development
    networks:
      - default

volumes:
  app-db-data: